plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'maven-publish'
}

group = 'uz.tripshare'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Trip Share Core'
                description = 'this is core for our trip share project. It contains all the core logic and entities'
                url = 'https://github.com/axmedovxasanboy/trip-share-core.git'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'axmedovxasanboy'
                        name = 'Axmedov Xasanboy'
                        email = 'akhmedovkhasanboy28@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/axmedovxasanboy/trip-share-core.git'
                    developerConnection = 'scm:git:ssh://github.com/trip-share-core.git'
                    url = 'https://github.com/axmedovxasanboy/trip-share-core.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/axmedovxasanboy/trip-share-core")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.token") ?: System.getenv("TOKEN")
            }
        }
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:3.3.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
